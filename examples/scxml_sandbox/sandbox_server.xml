<scxml xmlns="http://www.w3.org/2005/07/scxml" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.w3.org/2005/07/scxml http://www.w3.org/2011/04/SCXML/scxml.xsd"
    xmlns:spyderbrain="http://code.google.com/p/pyscxml"
    version="1.0">

    <datamodel>
        <data id="this_doc" src="sandbox_server.xml" />
        <data id="console" src="console.html" />
        <data id="sandbox" src="sandbox.js" />
        <data id="SCXMLEventProcessor" src="SCXMLEventProcessor.js" />
        <data id="get" expr="_x['self'].datamodel.get" />
        <data id="session" />
        <data id="counter" expr="0" />
        <data id="headers" expr="{'Access-Control-Allow-Origin' : '*'}" />
    </datamodel>


    <parallel>
<!--         <state id="webserver"> -->
<!--             <transition event="http.get"> -->
<!--                 <script> -->
<!--                     filename, ext = _event.name[2].split(".") -->
<!--                 </script> -->
<!--                 <send target="#_response" hints="{'Content-type' : 'text/html'}"> -->
<!--                     <param name="content" expr="get(filename)" /> -->
<!--                 </send> -->
<!--             </transition> -->
<!--         </state> -->

        <state id="sandbox">
            <transition event="http.post">
                <if cond="session">
                    <send targetexpr="'#_scxml_' + session" event="quit" />
                </if>
                <assign location="session" expr="'session_' + str(counter)" />
                <spyderbrain:start_session sessionidexpr="session">
                    <content><![CDATA[
                    
                        <scxml version="1.0" xmlns="http://www.w3.org/2005/07/scxml" >
                            <script>
                                import logging
                            </script>
                            <datamodel>
                                <data id="log_handler" /> 
                            </datamodel>
                            
                            <state id="waiting">
                                <onentry>
                                    <send target="#_scxml_server" eventexpr="'init.session.' + _sessionid" />
                                </onentry>
                                <transition event="websocket.connect" target="connected" />
                            </state>
                            
                            <state id="connected">
                                <onentry>
                                    <script>
                                        class EventHandler(logging.Handler):
                                            def __init__(self, level=logging.NOTSET):
                                                logging.Handler.__init__(self, level=level)
                                                
                                            def handle(self, record):
                                                _x["self"].send("log", data=record.getMessage() )
                                            
                                        log_handler = EventHandler()
                                        logging.getLogger("pyscxml.i").addHandler(log_handler)
                                        #_x["self"].datamodel["i"].sm.interpreter.logger.addHandler(log_handler)
                                    </script>
                                
                                </onentry>
                                <invoke id="i">
                                    <content>
                                        $_event.data["doc"]
                                    </content>
                                </invoke>
                                
                                
                                
                                <transition event="log">
                                    <send target="#_websocket" event="log">
                                        <param name="payload" expr="_event.data" />
                                    </send>
                                </transition>
                                <transition event="websocket.disconnect done.invoke quit" target="f">
                                    <script>
                                        logging.getLogger("pyscxml.i").removeHandler(log_handler)
                                    </script>
                                </transition>
                                
                                <transition event="error">
                                    <log label="error in sandbox_server" expr="_event.data" />
                                </transition>
                                
                                <transition event="*">
                                    <send target="#_i" eventexpr="'.'.join(_event.name)" />
                                </transition>
                                <onexit>
                                    <send target="#_websocket" event="close" />
                                </onexit>
                            </state>
                            
                            <final id="f" />
                        </scxml>
                    ]]>    
                    </content>
                    
                </spyderbrain:start_session>
                
<!--                 <send target="#_response" namelist="session headers" /> -->
            </transition>
            
            <transition event="init.session">
                <send target="#_response" namelist="session headers" event="success" />
                <assign location="counter" expr="counter + 1" />
            </transition>
            <transition event="error">
                <send target="#_response" namelist="headers" eventexpr="'.'.join(_event.name)" />
            </transition>
        </state>
    </parallel>
</scxml>