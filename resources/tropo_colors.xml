<?xml version="1.0"?>
<scxml>

    <script><![CDATA[
        import json
        def get_json():
            return _event.data["json_data"]
        
        def get_actions_attr(attr):
            if not get_json().get("result"): return
            return str(get_json()['result']['actions'][attr])
            
        ]]>
    </script>
    
    <state id="init">
       <transition event="tropo.init" target="dialog" />
    </state>
    
    <state id="dialog">
    
       <transition event="tropo.nomatch tropo.timeout">
            <send target="#_response">
                <content>
                    {
                    "tropo": [
                        {
                            "hangup": null
                        }
                    ] 
                }
                </content>
            </send>
        </transition>
    
        <state id="colors">
            <state id="c1" >
                <onentry>
                    <send target="#_response">
                    <content>
                        {
                            "tropo": [
                                {
                                    "ask": {
                                        "say": {
                                            "value": "Welcome. Which do you prefer, red or blue?" 
                                        },
                                        "choices": {
                                            "value": "blue, red, quit" 
                                        },
                                        "name": "color" ,
                                        "bargein": false
                                    }
                                },
                                {
                                    "on": {
                                        "next": "/session1/basichttp",
                                        "event": "continue" 
                                    } 
                                } 
                            ] 
                        }
                   </content>
                </send>
                    
                </onentry>
                <transition event="tropo.answer.ask" 
                            cond="get_actions_attr('interpretation') != 'quit'" 
                            target="c2">
                            
                    <script>
                        interpretation = get_actions_attr('interpretation')
                        confidence = get_actions_attr('confidence')                     
                    </script>   
                    <send target="#_response">
                    <content>
                    {
                    "tropo": [
                    {
                    "say": [{"value": "You said %(interpretation)s"},
                    {"value": "With a confidence of %(confidence)s"}]
                    },                    {
                        "on": {
                            "next": "/session1/basichttp",
                            "event": "continue" 
                        } 
                    }
                    ]
                    }
                    </content>
               </send>
                </transition>
            </state>
            
            <state id="c2">
                <transition event="tropo.answer.say" target="sizes" />
            </state>
            
        </state>
        <state id="sizes">
            <state id="s1">
                <onentry>
                <send target="#_response">
                    <content>
                    {
                            "tropo": [
                                {
                                    "ask": {
                                        "say": {
                                            "value": "Which do you prefer, small or large?" 
                                        },
                                        "choices": {
                                            "value": "small, large, quit" 
                                        },
                                        "name": "size" ,
                                        "bargein": false
                                    }
                                },
                                {
                                    "on": {
                                        "next": "/session1/basichttp",
                                        "event": "continue" 
                                    } 
                                } 
                            ] 
                        }

                   </content>
                   </send>
                </onentry>
                
                <transition event="tropo.answer.ask" 
                            cond="get_actions_attr('interpretation') != 'quit'" 
                            target="s2" >
                    <script>confidence = get_actions_attr("confidence")</script>
                    <send target="#_response">
                    <content>
                    {
                    "tropo": [
                        {"say": {"value": "You answered with a confidence of %(confidence)s"}},
                        {
                        "on": {
                            "next": "/session1/basichttp",
                            "event": "continue" 
                        } 
                    }
                        ]
                    }
                   </content>
                   </send>
                </transition>
            </state>
            
            <state id="s2">
                <transition event="tropo.answer.say" target="colors" />
            </state>
        </state>
        <transition event="tropo.answer.ask"
            cond="get_actions_attr('interpretation') == 'quit'" target="f">
            <send target="#_response">
            <content>
                {
                    "tropo": [
                        {
                            "say": {
                                "value" : "Ok, thank you and goodbye!"
                                }
                        }
                    ] 
                }

           </content>
           </send>
        </transition>
    </state>
    <final id="f" />
</scxml>

